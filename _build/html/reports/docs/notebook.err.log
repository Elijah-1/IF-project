Traceback (most recent call last):
  File "/home/luka/miniconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/luka/miniconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/luka/miniconda3/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
years = oe_df['year']
oil_production = oe_df['oil_prod32_14']
number_of_disasters = oe_df['Disasters']

years = data['year']
oil_production = data['oil_prod32_14']
number_of_disasters = data['Disasters']

# Create the figure
fig = go.Figure()

# Add oil production line
fig.add_trace(go.Scatter(
    x=years,
    y=oil_production,
    mode='lines+markers',
    name='Oil Production',
    yaxis='y1',
    line=dict(color='black'),
    marker=dict(color='black'),
    hovertemplate='Year: %{x}<br>Oil Production: %{y}'
))

# Add number of disasters line
fig.add_trace(go.Scatter(
    x=years,
    y=number_of_disasters,
    mode='lines+markers',
    name='Number of Earthquakes',
    yaxis='y2',
    line=dict(color='#008000'),  # Using hex code for green
    marker=dict(color='#008000'),  # Using hex code for green
    hovertemplate='Year: %{x}<br>Number of Earthquakes: %{y}'
))

# Update layout for dual y-axis
fig.update_layout(
    title='Oil Production and Number of Earthquakes Over the Years',
    xaxis=dict(title='Year'),
    yaxis=dict(
        title='Oil Production',
        titlefont=dict(color='black'),
        tickfont=dict(color='black')
    ),
    yaxis2=dict(
        title='Number of Earthquakes',
        titlefont=dict(color='#008000'),  # Using hex code for green
        tickfont=dict(color='#008000'),  # Using hex code for green
        overlaying='y',
        side='right'
    ),
    legend=dict(x=0.1, y=1.1, orientation='h')
)

# Show the figure
fig.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[7], line 5[0m
[1;32m      2[0m oil_production [38;5;241m=[39m oe_df[[38;5;124m'[39m[38;5;124moil_prod32_14[39m[38;5;124m'[39m]
[1;32m      3[0m number_of_disasters [38;5;241m=[39m oe_df[[38;5;124m'[39m[38;5;124mDisasters[39m[38;5;124m'[39m]
[0;32m----> 5[0m years [38;5;241m=[39m [43mdata[49m[[38;5;124m'[39m[38;5;124myear[39m[38;5;124m'[39m]
[1;32m      6[0m oil_production [38;5;241m=[39m data[[38;5;124m'[39m[38;5;124moil_prod32_14[39m[38;5;124m'[39m]
[1;32m      7[0m number_of_disasters [38;5;241m=[39m data[[38;5;124m'[39m[38;5;124mDisasters[39m[38;5;124m'[39m]

[0;31mNameError[0m: name 'data' is not defined

