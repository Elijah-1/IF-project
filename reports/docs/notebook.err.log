Traceback (most recent call last):
  File "/home/luka/miniconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/luka/miniconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/luka/miniconda3/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/luka/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import plotly.graph_objs as go
import plotly.express as px
import pandas as pd
import numpy as np
from scipy.stats import pearsonr

nd_df = pd.read_csv('https://raw.githubusercontent.com/Elijah-1/IF-project/main/datasets/disaster-events%20new.csv')
ghg_df = pd.read_csv('https://raw.githubusercontent.com/Elijah-1/IF-project/main/datasets/transformed_data_separate_columns.csv')
oe_df = pd.read_csv('https://raw.githubusercontent.com/Elijah-1/IF-project/main/datasets/Oil_and_Earthquake.csv')

nd_df = nd_df[nd_df['Year'] >= 1970]
nd_df = nd_df[nd_df['Year'] != 2023]
nd_df = nd_df[nd_df['Year'] != 2024]

# emissions only all per year
ghg_all_df = ghg_df[ghg_df['Substance'] == 'ALL'][['Year', 'Emissions']]

# emissions excluding all per year
ghg_ex_df = ghg_df[ghg_df['Substance'] != 'ALL']

# natural disasters only all disasters per year
nd_all_df = nd_df[nd_df['Entity'] == 'All disasters'][['Year', 'Disasters']]

# natural disasters excluding all disasters {wildcard} per year
nd_ex_df = nd_df[~nd_df['Entity'].str.startswith('All disasters')]

nd_all_disasters_df = nd_df[nd_df['Entity'] == 'All disasters']

# merged
merged_all_df = pd.merge(ghg_all_df, nd_all_df, on='Year', how='inner')

disaster_counts = nd_ex_df.groupby('Entity')['Disasters'].sum().reset_index()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
File [0;32m~/miniconda3/lib/python3.12/site-packages/pandas/core/indexes/base.py:3805[0m, in [0;36mIndex.get_loc[0;34m(self, key)[0m
[1;32m   3804[0m [38;5;28;01mtry[39;00m:
[0;32m-> 3805[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_engine[49m[38;5;241;43m.[39;49m[43mget_loc[49m[43m([49m[43mcasted_key[49m[43m)[49m
[1;32m   3806[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m [38;5;28;01mas[39;00m err:

File [0;32mindex.pyx:167[0m, in [0;36mpandas._libs.index.IndexEngine.get_loc[0;34m()[0m

File [0;32mindex.pyx:196[0m, in [0;36mpandas._libs.index.IndexEngine.get_loc[0;34m()[0m

File [0;32mpandas/_libs/hashtable_class_helper.pxi:7081[0m, in [0;36mpandas._libs.hashtable.PyObjectHashTable.get_item[0;34m()[0m

File [0;32mpandas/_libs/hashtable_class_helper.pxi:7089[0m, in [0;36mpandas._libs.hashtable.PyObjectHashTable.get_item[0;34m()[0m

[0;31mKeyError[0m: 'Substance'

The above exception was the direct cause of the following exception:

[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[1], line 16[0m
[1;32m     13[0m nd_df [38;5;241m=[39m nd_df[nd_df[[38;5;124m'[39m[38;5;124mYear[39m[38;5;124m'[39m] [38;5;241m!=[39m [38;5;241m2024[39m]
[1;32m     15[0m [38;5;66;03m# emissions only all per year[39;00m
[0;32m---> 16[0m ghg_all_df [38;5;241m=[39m ghg_df[[43mghg_df[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mSubstance[39;49m[38;5;124;43m'[39;49m[43m][49m [38;5;241m==[39m [38;5;124m'[39m[38;5;124mALL[39m[38;5;124m'[39m][[[38;5;124m'[39m[38;5;124mYear[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mEmissions[39m[38;5;124m'[39m]]
[1;32m     18[0m [38;5;66;03m# emissions excluding all per year[39;00m
[1;32m     19[0m ghg_ex_df [38;5;241m=[39m ghg_df[ghg_df[[38;5;124m'[39m[38;5;124mSubstance[39m[38;5;124m'[39m] [38;5;241m!=[39m [38;5;124m'[39m[38;5;124mALL[39m[38;5;124m'[39m]

File [0;32m~/miniconda3/lib/python3.12/site-packages/pandas/core/frame.py:4102[0m, in [0;36mDataFrame.__getitem__[0;34m(self, key)[0m
[1;32m   4100[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mcolumns[38;5;241m.[39mnlevels [38;5;241m>[39m [38;5;241m1[39m:
[1;32m   4101[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_getitem_multilevel(key)
[0;32m-> 4102[0m indexer [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcolumns[49m[38;5;241;43m.[39;49m[43mget_loc[49m[43m([49m[43mkey[49m[43m)[49m
[1;32m   4103[0m [38;5;28;01mif[39;00m is_integer(indexer):
[1;32m   4104[0m     indexer [38;5;241m=[39m [indexer]

File [0;32m~/miniconda3/lib/python3.12/site-packages/pandas/core/indexes/base.py:3812[0m, in [0;36mIndex.get_loc[0;34m(self, key)[0m
[1;32m   3807[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(casted_key, [38;5;28mslice[39m) [38;5;129;01mor[39;00m (
[1;32m   3808[0m         [38;5;28misinstance[39m(casted_key, abc[38;5;241m.[39mIterable)
[1;32m   3809[0m         [38;5;129;01mand[39;00m [38;5;28many[39m([38;5;28misinstance[39m(x, [38;5;28mslice[39m) [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m casted_key)
[1;32m   3810[0m     ):
[1;32m   3811[0m         [38;5;28;01mraise[39;00m InvalidIndexError(key)
[0;32m-> 3812[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m [38;5;21;01merr[39;00m
[1;32m   3813[0m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m:
[1;32m   3814[0m     [38;5;66;03m# If we have a listlike key, _check_indexing_error will raise[39;00m
[1;32m   3815[0m     [38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise[39;00m
[1;32m   3816[0m     [38;5;66;03m#  the TypeError.[39;00m
[1;32m   3817[0m     [38;5;28mself[39m[38;5;241m.[39m_check_indexing_error(key)

[0;31mKeyError[0m: 'Substance'

